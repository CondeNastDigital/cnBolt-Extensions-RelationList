#!/bin/bash

# Check that environment variables are set
if [ "$COMPOSER_PR_REPO" = "" ] ; then
    echo "COMPOSER_PR_REPO variable not set"
    exit 1
fi
if [ "$COMPOSER_INSTALL" = "" ] ; then
    echo "COMPOSER_INSTALL variable not set"
    exit 1
fi
if [ "$TRAVIS_BUILD_DIR" = "" ] ; then
    echo "TRAVIS_BUILD_DIR variable not set"
    exit 1
fi

# Check a return code and exit if in an error state
function check_return () {
    if [ $? -ne 0 ] ; then
        echo ""
        echo "[ERROR] Bad exit code from Composer environment build script"
        exit 1
    fi
}

# Create the Composer install directory
function create_install () {
    # Set up the PR repo
    echo "Cloning $TRAVIS_BUILD_DIR to $COMPOSER_PR_REPO"
    rsync -a $TRAVIS_BUILD_DIR/ $COMPOSER_PR_REPO/
    check_return

    pushd $COMPOSER_PR_REPO > /dev/null

    if [ "$TRAVIS_PULL_REQUEST" = false ] ; then
        echo "Checking out commit: $TRAVIS_COMMIT"
        git checkout -qf $TRAVIS_COMMIT
        check_return
    else
        echo "Checking out PR: $TRAVIS_PULL_REQUEST"
        git fetch origin +refs/pull/$TRAVIS_PULL_REQUEST/merge:
        check_return
        git checkout -qf FETCH_HEAD
        check_return
    fi

    echo "Creating Travis testing branchâ€¦"
    git checkout -b travis-install
    check_return

    echo "Updating branch-alias in composer.json"
    perl -p -i -e 'undef $/; s/"branch-alias".*\n.*"dev-master"/"branch-alias" : {\n            "dev-travis-install"/' $COMPOSER_PR_REPO/composer.json
    check_return

    popd > /dev/null
}

function update_repos () {
    # Set repositories
    composer config --working-dir=$COMPOSER_INSTALL repositories.travis '{"type": "path", "url": "'$COMPOSER_PR_REPO'", "options": {"symlink": false}}'
    check_return
}

function require_package() {
    composer require --working-dir=$COMPOSER_INSTALL --no-update $1
    check_return
}

########################################################################################################################
# INSTALLER
########################################################################################################################

# Create the Compsoer install directory
create_install

# Create a Composer project
composer create-project bolt/composer-install:^3.0 $COMPOSER_INSTALL --no-interaction --prefer-dist --stability=dev
check_return

# Add extra repositories to composer.json
update_repos

# Add development requires
# require_package codeception/codeception:^2.1
# Temporary until issue with Codeception fixed
require_package codeception/codeception:2.2.1

# Require the Bolt version under test
require_package bolt/bolt:dev-travis-install@dev

# Pull in packages
composer update --working-dir=$COMPOSER_INSTALL
check_return

# Clean up
rm $COMPOSER_INSTALL/vendor/bolt/bolt/vendor/ -rf
